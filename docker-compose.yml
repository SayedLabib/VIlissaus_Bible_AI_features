version: '3.8'

services:
  # Bible AI FastAPI Application
  bible-ai-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vilisasu-bible-ai-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=8065  # Ensure that the app listens on port 8065 inside the container
      - ENVIRONMENT=production
    volumes:
      - ./app:/app/app:ro  # Read-only mount for code
      - ./.env:/app/.env:ro  # Read-only mount for env file
    ports:
      - "8065:8065"  # Expose port 8065 for direct access (optional, useful for testing)
    networks:
      - bible-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: vilisasu-bible-ai-nginx
    restart: unless-stopped
    ports:
      - "80:8065"  # Expose port 80 on host to forward to the FastAPI app on port 8065 inside the container
      - "444:444"  # For future SSL support (optional for now)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
      # Uncomment for SSL certificates
      # - ./ssl:/etc/nginx/ssl:ro
    networks:
      - bible-ai-network
    depends_on:
      - bible-ai-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

# Networks
networks:
  bible-ai-network:
    driver: bridge
    name: vilisasu-bible-ai-network

# Volumes
volumes:
  nginx_logs:
    name: vilisasu-bible-ai-nginx-logs
